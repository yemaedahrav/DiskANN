window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"diskannpy": {"fullname": "diskannpy", "modulename": "diskannpy", "kind": "module", "doc": "<h1 id=\"documentation-overview\">Documentation Overview</h1>\n\n<p><code>diskannpy</code> is mostly structured around 2 distinct processes: <a href=\"#index-builders\">Index Builder Functions</a> and <a href=\"#search-classes\">Search Classes</a></p>\n\n<p>It also includes a few nascent <a href=\"#utilities\">utilities</a>.</p>\n\n<p>And lastly, it makes substantial use of type hints, with various shorthand <a href=\"#parameter-and-response-type-aliases\">type aliases</a> documented. \nWhen reading the <code>diskannpy</code> code we refer to the type aliases, though <code>pdoc</code> helpfully expands them.</p>\n\n<h2 id=\"index-builders\">Index Builders</h2>\n\n<ul>\n<li><code>build_disk_index</code> - To build an index that cannot fully fit into memory when searching</li>\n<li><code>build_memory_index</code> - To build an index that can fully fit into memory when searching</li>\n</ul>\n\n<h2 id=\"search-classes\">Search Classes</h2>\n\n<ul>\n<li><code>StaticMemoryIndex</code> - for indices that can fully fit in memory and won't be changed during the search operations</li>\n<li><code>StaticDiskIndex</code> - for indices that cannot fully fit in memory, thus relying on disk IO to search, and also won't be changed during search operations</li>\n<li><code>DynamicMemoryIndex</code> - for indices that can fully fit in memory and will be mutated via insert/deletion operations as well as search operations</li>\n</ul>\n\n<h2 id=\"parameter-defaults\">Parameter Defaults</h2>\n\n<ul>\n<li><code>diskannpy.defaults</code> - Default values exported from the C++ extension for Python users</li>\n</ul>\n\n<h2 id=\"parameter-and-response-type-aliases\">Parameter and Response Type Aliases</h2>\n\n<ul>\n<li><code>DistanceMetric</code> - What distance metrics does <code>diskannpy</code> support?</li>\n<li><code>VectorDType</code> - What vector datatypes does <code>diskannpy</code> support?</li>\n<li><code>QueryResponse</code> - What can I expect as a response to my search?</li>\n<li><code>QueryResponseBatch</code> - What can I expect as a response to my batch search?</li>\n<li><code>VectorIdentifier</code> - What types do <code>diskannpy</code> support as vector identifiers?</li>\n<li><code>VectorIdentifierBatch</code> - A batch of identifiers of the exact same type. The type can change, but they must <strong>all</strong> change.</li>\n<li><code>VectorLike</code> - How does a vector look to <code>diskannpy</code>, to be inserted or searched with.</li>\n<li><code>VectorLikeBatch</code> - A batch of those vectors, to be inserted or searched with.</li>\n<li><code>Metadata</code> - DiskANN vector binary file metadata (num_points, vector_dim)</li>\n</ul>\n\n<h2 id=\"utilities\">Utilities</h2>\n\n<ul>\n<li><code>vectors_to_file</code> - Turns a 2 dimensional <code>numpy.typing.NDArray[VectorDType]</code> with shape <code>(number_of_points, vector_dim)</code> into a DiskANN vector bin file.</li>\n<li><code>vectors_from_file</code> - Reads a DiskANN vector bin file representing stored vectors into a numpy ndarray.</li>\n<li><code>vectors_metadata_from_file</code> - Reads metadata stored in a DiskANN vector bin file without reading the entire file</li>\n<li><code>tags_to_file</code> - Turns a 1 dimensional <code>numpy.typing.NDArray[VectorIdentifier]</code> into a DiskANN tags bin file.</li>\n<li><code>tags_from_file</code> - Reads a DiskANN tags bin file representing stored tags into a numpy ndarray.</li>\n<li><code>valid_dtype</code> - Checks if a given vector dtype is supported by <code>diskannpy</code></li>\n</ul>\n"}, "diskannpy.build_disk_index": {"fullname": "diskannpy.build_disk_index", "modulename": "diskannpy", "qualname": "build_disk_index", "kind": "function", "doc": "<p>This function will construct a DiskANN disk index. Disk indices are ideal for very large datasets that\nare too large to fit in memory. Memory is still used, but it is primarily used to provide precise disk\nlocations for fast retrieval of smaller subsets of the index without compromising much on recall.</p>\n\n<p>If you provide a numpy array, it will save this array to disk in a temp location\nin the format DiskANN's PQ Flash Index builder requires. This temp folder is deleted upon index creation completion\nor error.</p>\n\n<h2 id=\"distance-metric-and-vector-datatype-restrictions\">Distance Metric and Vector Datatype Restrictions</h2>\n\n<table>\n<thead>\n<tr>\n  <th>Metric \\ Datatype</th>\n  <th>np.float32</th>\n  <th>np.uint8</th>\n  <th>np.int8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>L2</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>MIPS</td>\n  <td>\u2705</td>\n  <td>\u274c</td>\n  <td>\u274c</td>\n</tr>\n<tr>\n  <td>Cosine <sup class=\"footnote-ref\" id=\"fnref-bug-in-disk-cosine\"><a href=\"#fn-bug-in-disk-cosine\">1</a></sup></td>\n  <td>\u274c</td>\n  <td>\u274c</td>\n  <td>\u274c</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>data</strong>: Either a <code>str</code> representing a path to a DiskANN vector bin file, or a numpy.ndarray,\nof a supported dtype, in 2 dimensions. Note that <code>vector_dtype</code> must be provided if data is a <code>str</code></li>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats.</li>\n<li><strong>index_directory</strong>: The index files will be saved to this <strong>existing</strong> directory path</li>\n<li><strong>complexity</strong>: The size of the candidate nearest neighbor list to use when building the index. Values between 75\nand 200 are typical. Larger values will take more time to build but result in indices that provide higher recall\nfor the same search complexity. Use a value that is at least as large as <code>graph_degree</code> unless you are prepared\nto compromise on quality</li>\n<li><strong>graph_degree</strong>: The degree of the graph index, typically between 60 and 150. A larger maximum degree will\nresult in larger indices and longer indexing times, but better search quality.</li>\n<li><strong>search_memory_maximum</strong>: Build index with the expectation that the search will use at most\n<code>search_memory_maximum</code>, in gb.</li>\n<li><strong>build_memory_maximum</strong>: Build index using at most <code>build_memory_maximum</code> in gb. Building processes typically\nrequire more memory, while search memory can be reduced.</li>\n<li><strong>num_threads</strong>: Number of threads to use when creating this index. <code>0</code> is used to indicate all available\nlogical processors should be used.</li>\n<li><strong>pq_disk_bytes</strong>: Use <code>0</code> to store uncompressed data on SSD. This allows the index to asymptote to 100%\nrecall. If your vectors are too large to store in SSD, this parameter provides the option to compress the\nvectors using PQ for storing on SSD. This will trade off recall. You would also want this to be greater\nthan the number of bytes used for the PQ compressed data stored in-memory. Default is <code>0</code>.</li>\n<li><strong>vector_dtype</strong>: Required if the provided <code>data</code> is of type <code>str</code>, else we use the <code>data.dtype</code> if np array.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n</ul>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-bug-in-disk-cosine\">\n<p>For StaticDiskIndex, Cosine distances are not currently supported.&#160;<a href=\"#fnref-bug-in-disk-cosine\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">index_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">graph_degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">search_memory_maximum</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">build_memory_maximum</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">pq_disk_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "diskannpy.build_memory_index": {"fullname": "diskannpy.build_memory_index", "modulename": "diskannpy", "qualname": "build_memory_index", "kind": "function", "doc": "<p>This function will construct a DiskANN memory index. Memory indices are ideal for smaller datasets whose\nindices can fit into memory. Memory indices are faster than disk indices, but usually cannot scale to massive\nsizes in an individual index on an individual machine.</p>\n\n<p><code>diskannpy</code>'s memory indices take two forms: a <code>diskannpy.StaticMemoryIndex</code>, which will not be mutated, only\nsearched upon, and a <code>diskannpy.DynamicMemoryIndex</code>, which can be mutated AND searched upon in the same process.</p>\n\n<h2 id=\"important-note\">Important Note:</h2>\n\n<p>You <strong>must</strong> determine the type of index you are building for. If you are building for a\n<code>diskannpy.DynamicMemoryIndex</code>, you <strong>must</strong> supply a valid value for the <code>tags</code> parameter. <strong>Do not supply\ntags if the index is intended to be <code>diskannpy.StaticMemoryIndex</code></strong>!</p>\n\n<h2 id=\"distance-metric-and-vector-datatype-restrictions\">Distance Metric and Vector Datatype Restrictions</h2>\n\n<table>\n<thead>\n<tr>\n  <th>Metric \\ Datatype</th>\n  <th>np.float32</th>\n  <th>np.uint8</th>\n  <th>np.int8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>L2</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n</tr>\n<tr>\n  <td>MIPS</td>\n  <td>\u2705</td>\n  <td>\u274c</td>\n  <td>\u274c</td>\n</tr>\n<tr>\n  <td>Cosine</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n  <td>\u2705</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>data</strong>: Either a <code>str</code> representing a path to an existing DiskANN vector bin file, or a numpy.ndarray of a\nsupported dtype in 2 dimensions. Note that <code>vector_dtype</code> must be provided if <code>data</code> is a <code>str</code>.</li>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats.</li>\n<li><strong>index_directory</strong>: The index files will be saved to this <strong>existing</strong> directory path</li>\n<li><strong>complexity</strong>: The size of the candidate nearest neighbor list to use when building the index. Values between 75\nand 200 are typical. Larger values will take more time to build but result in indices that provide higher recall\nfor the same search complexity. Use a value that is at least as large as <code>graph_degree</code> unless you are prepared\nto compromise on quality</li>\n<li><strong>graph_degree</strong>: The degree of the graph index, typically between 60 and 150. A larger maximum degree will\nresult in larger indices and longer indexing times, but better search quality.</li>\n<li><strong>num_threads</strong>: Number of threads to use when creating this index. <code>0</code> is used to indicate all available\nlogical processors should be used.</li>\n<li><strong>alpha</strong>: The alpha parameter (&gt;=1) is used to control the nature and number of points that are added to the\ngraph. A higher alpha value (e.g., 1.4) will result in fewer hops (and IOs) to convergence, but probably more\ndistance comparisons compared to a lower alpha value.</li>\n<li><strong>use_pq_build</strong>: Use product quantization during build. Product quantization is a lossy compression technique\nthat can reduce the size of the index on disk. This will trade off recall. Default is <code>True</code>.</li>\n<li><strong>num_pq_bytes</strong>: The number of bytes used to store the PQ compressed data in memory. This will trade off recall.\nDefault is <code>0</code>.</li>\n<li><strong>use_opq</strong>: Use optimized product quantization during build.</li>\n<li><strong>vector_dtype</strong>: Required if the provided <code>data</code> is of type <code>str</code>, else we use the <code>data.dtype</code> if np array.</li>\n<li><strong>tags</strong>: Tags can be defined either as a path on disk to an existing .tags file, or provided as a np.array of\nthe same length as the number of vectors. Tags are used to identify vectors in the index via your <em>own</em>\nnumbering conventions, and is absolutely required for loading DynamicMemoryIndex indices <code>from_file</code>.</li>\n<li><strong>filter_labels</strong>: An optional, but exhaustive list of categories for each vector. This is used to filter\nsearch results by category. If provided, this must be a list of lists, where each inner list is a list of\ncategories for the corresponding vector. For example, if you have 3 vectors, and the first vector belongs to\ncategories \"a\" and \"b\", the second vector belongs to category \"b\", and the third vector belongs to no categories,\nyou would provide <code>filter_labels=[[\"a\", \"b\"], [\"b\"], []]</code>. If you do not want to provide categories for a\nparticular vector, you can provide an empty list. If you do not want to provide categories for any vectors,\nyou can provide <code>None</code> for this parameter (which is the default)</li>\n<li><strong>universal_label</strong>: An optional label that indicates that this vector should be included in <em>every</em> search\nin which it also meets the knn search criteria.</li>\n<li><strong>filter_complexity</strong>: Complexity to use when using filters. Default is 0. 0 is strictly invalid if you are\nusing filters.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">index_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">graph_degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2000000476837158</span>,</span><span class=\"param\">\t<span class=\"n\">use_pq_build</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_pq_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">use_opq</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filter_labels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">universal_label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filter_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "diskannpy.StaticDiskIndex": {"fullname": "diskannpy.StaticDiskIndex", "modulename": "diskannpy", "qualname": "StaticDiskIndex", "kind": "class", "doc": "<p>A StaticDiskIndex is a disk-backed index that is not mutable.</p>\n"}, "diskannpy.StaticDiskIndex.__init__": {"fullname": "diskannpy.StaticDiskIndex.__init__", "modulename": "diskannpy", "qualname": "StaticDiskIndex.__init__", "kind": "function", "doc": "<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><p><strong>index_directory</strong>: The directory containing the index files. This directory must contain the following\n  files:</p>\n\n<ul>\n<li><code>{index_prefix}_sample_data.bin</code></li>\n<li><code>{index_prefix}_mem.index.data</code></li>\n<li><code>{index_prefix}_pq_compressed.bin</code></li>\n<li><code>{index_prefix}_pq_pivots.bin</code></li>\n<li><code>{index_prefix}_sample_ids.bin</code></li>\n<li><code>{index_prefix}_disk.index</code></li>\n</ul>\n\n<p>It may also include the following optional files:</p>\n\n<ul>\n<li><code>{index_prefix}_vectors.bin</code>: Optional. <code>diskannpy</code> builder functions may create this file in the\n<code>index_directory</code> if the index was created from a numpy array</li>\n<li><code>{index_prefix}_metadata.bin</code>: Optional. <code>diskannpy</code> builder functions create this file to store metadata\nabout the index, such as vector dtype, distance metric, number of vectors and vector dimensionality.\nIf an index is built from the <code>diskann</code> cli tools, this file will not exist.</li>\n</ul></li>\n<li><strong>num_threads</strong>: Number of threads to use when searching this index. (&gt;= 0), 0 = num_threads in system</li>\n<li><strong>num_nodes_to_cache</strong>: Number of nodes to cache in memory (&gt; -1)</li>\n<li><strong>cache_mechanism</strong>: 1 -> use the generated sample_data.bin file for\nthe index to initialize a set of cached nodes, up to <code>num_nodes_to_cache</code>, 2 -> ready the cache for up to\n<code>num_nodes_to_cache</code>, but do not initialize it with any nodes. Any other value disables node caching.</li>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats. Default is <code>None</code>. <strong>This\nvalue is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist,\nyou are required to provide it.</li>\n<li><strong>vector_dtype</strong>: The vector dtype this index has been built with. <strong>This value is only used if a\n<code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist, you are required to provide it.</li>\n<li><strong>dimensions</strong>: The vector dimensionality of this index. All new vectors inserted must be the same\ndimensionality. <strong>This value is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it\ndoes not exist, you are required to provide it.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">index_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_nodes_to_cache</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">cache_mechanism</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span></span>)</span>"}, "diskannpy.StaticDiskIndex.search": {"fullname": "diskannpy.StaticDiskIndex.search", "modulename": "diskannpy", "qualname": "StaticDiskIndex.search", "kind": "function", "doc": "<p>Searches the index by a single query vector.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>query</strong>: 1d numpy array of the same dimensionality and dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n<li><strong>beam_width</strong>: The beamwidth to be used for search. This is the maximum number of IO requests each query\nwill issue per iteration of search code. Larger beamwidth will result in fewer IO round-trips per query,\nbut might result in slightly higher total number of IO requests to SSD per query. For the highest query\nthroughput with a fixed SSD IOps rating, use W=1. For best latency, use W=4,8 or higher complexity search.\nSpecifying 0 will optimize the beamwidth depending on the number of threads performing search, but will\ninvolve some tuning overhead.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">beam_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponse</span>:</span></span>", "funcdef": "def"}, "diskannpy.StaticDiskIndex.batch_search": {"fullname": "diskannpy.StaticDiskIndex.batch_search", "modulename": "diskannpy", "qualname": "StaticDiskIndex.batch_search", "kind": "function", "doc": "<p>Searches the index by a batch of query vectors.</p>\n\n<p>This search is parallelized and far more efficient than searching for each vector individually.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>queries</strong>: 2d numpy array, with column dimensionality matching the index and row dimensionality being the\nnumber of queries intended to search for in parallel. Dtype must match dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n<li><strong>num_threads</strong>: Number of threads to use when searching this index. (&gt;= 0), 0 = num_threads in system</li>\n<li><strong>beam_width</strong>: The beamwidth to be used for search. This is the maximum number of IO requests each query\nwill issue per iteration of search code. Larger beamwidth will result in fewer IO round-trips per query,\nbut might result in slightly higher total number of IO requests to SSD per query. For the highest query\nthroughput with a fixed SSD IOps rating, use W=1. For best latency, use W=4,8 or higher complexity search.\nSpecifying 0 will optimize the beamwidth depending on the number of threads performing search, but will\ninvolve some tuning overhead.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">queries</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">beam_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponseBatch</span>:</span></span>", "funcdef": "def"}, "diskannpy.StaticMemoryIndex": {"fullname": "diskannpy.StaticMemoryIndex", "modulename": "diskannpy", "qualname": "StaticMemoryIndex", "kind": "class", "doc": "<p>A StaticMemoryIndex is an immutable in-memory DiskANN index.</p>\n"}, "diskannpy.StaticMemoryIndex.__init__": {"fullname": "diskannpy.StaticMemoryIndex.__init__", "modulename": "diskannpy", "qualname": "StaticMemoryIndex.__init__", "kind": "function", "doc": "<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><p><strong>index_directory</strong>: The directory containing the index files. This directory must contain the following\nfiles:</p>\n\n<ul>\n<li><code>{index_prefix}.data</code></li>\n<li><code>{index_prefix}</code></li>\n</ul>\n\n<p>It may also include the following optional files:</p>\n\n<ul>\n<li><code>{index_prefix}_vectors.bin</code>: Optional. <code>diskannpy</code> builder functions may create this file in the\n<code>index_directory</code> if the index was created from a numpy array</li>\n<li><code>{index_prefix}_metadata.bin</code>: Optional. <code>diskannpy</code> builder functions create this file to store metadata\nabout the index, such as vector dtype, distance metric, number of vectors and vector dimensionality.\nIf an index is built from the <code>diskann</code> cli tools, this file will not exist.</li>\n</ul></li>\n<li><strong>num_threads</strong>: Number of threads to use when searching this index. (&gt;= 0), 0 = num_threads in system</li>\n<li><strong>initial_search_complexity</strong>: Should be set to the most common <code>complexity</code> expected to be used during the\nlife of this <code>diskannpy.DynamicMemoryIndex</code> object. The working scratch memory allocated is based off of\n<code>initial_search_complexity</code> * <code>search_threads</code>. Note that it may be resized if a <code>search</code> or <code>batch_search</code>\noperation requests a space larger than can be accommodated by these values.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats. Default is <code>None</code>. <strong>This\nvalue is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist,\nyou are required to provide it.</li>\n<li><strong>vector_dtype</strong>: The vector dtype this index has been built with. <strong>This value is only used if a\n<code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist, you are required to provide it.</li>\n<li><strong>dimensions</strong>: The vector dimensionality of this index. All new vectors inserted must be the same\ndimensionality. <strong>This value is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it\ndoes not exist, you are required to provide it.</li>\n<li><strong>enable_filters</strong>: Indexes built with filters can also be used for filtered search.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">index_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">initial_search_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enable_filters</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "diskannpy.StaticMemoryIndex.search": {"fullname": "diskannpy.StaticMemoryIndex.search", "modulename": "diskannpy", "qualname": "StaticMemoryIndex.search", "kind": "function", "doc": "<p>Searches the index by a single query vector.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>query</strong>: 1d numpy array of the same dimensionality and dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">filter_label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponse</span>:</span></span>", "funcdef": "def"}, "diskannpy.StaticMemoryIndex.batch_search": {"fullname": "diskannpy.StaticMemoryIndex.batch_search", "modulename": "diskannpy", "qualname": "StaticMemoryIndex.batch_search", "kind": "function", "doc": "<p>Searches the index by a batch of query vectors.</p>\n\n<p>This search is parallelized and far more efficient than searching for each vector individually.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>queries</strong>: 2d numpy array, with column dimensionality matching the index and row dimensionality being the\nnumber of queries intended to search for in parallel. Dtype must match dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n<li><strong>num_threads</strong>: Number of threads to use when searching this index. (&gt;= 0), 0 = num_threads in system</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">queries</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponseBatch</span>:</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex": {"fullname": "diskannpy.DynamicMemoryIndex", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex", "kind": "class", "doc": "<p>A DynamicMemoryIndex instance is used to both search and mutate a <code>diskannpy</code> memory index. This index is unlike\neither <code>diskannpy.StaticMemoryIndex</code> or <code>diskannpy.StaticDiskIndex</code> in the following ways:</p>\n\n<ul>\n<li>It requires an explicit vector identifier for each vector added to it.</li>\n<li>Insert and (lazy) deletion operations are provided for a flexible, living index</li>\n</ul>\n\n<p>The mutable aspect of this index will absolutely impact search time performance as new vectors are added and\nold deleted. <code>DynamicMemoryIndex.consolidate_deletes()</code> should be called periodically to restructure the index\nto remove deleted vectors and improve per-search performance, at the cost of an expensive index consolidation to\noccur.</p>\n"}, "diskannpy.DynamicMemoryIndex.__init__": {"fullname": "diskannpy.DynamicMemoryIndex.__init__", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.__init__", "kind": "function", "doc": "<p>The <code>diskannpy.DynamicMemoryIndex</code> represents our python API into a mutable DiskANN memory index.</p>\n\n<p>This constructor is used to create a new, empty index. If you wish to load a previously saved index from disk,\nplease use the <code>diskannpy.DynamicMemoryIndex.from_file</code> classmethod instead.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats.</li>\n<li><strong>vector_dtype</strong>: One of {<code>np.float32</code>, <code>np.int8</code>, <code>np.uint8</code>}. The dtype of the vectors this index will\nbe storing.</li>\n<li><strong>dimensions</strong>: The vector dimensionality of this index. All new vectors inserted must be the same\ndimensionality.</li>\n<li><strong>max_vectors</strong>: Capacity of the data store including space for future insertions</li>\n<li><strong>graph_degree</strong>: Graph degree (a.k.a. <code>R</code>) is the maximum degree allowed for a node in the index's graph\nstructure. This degree will be pruned throughout the course of the index build, but it will never grow beyond\nthis value. Higher <code>graph_degree</code> values require longer index build times, but may result in an index showing\nexcellent recall and latency characteristics.</li>\n<li><strong>saturate_graph</strong>: If True, the adjacency list of each node will be saturated with neighbors to have exactly\n<code>graph_degree</code> neighbors. If False, each node will have between 1 and <code>graph_degree</code> neighbors.</li>\n<li><strong>max_occlusion_size</strong>: The maximum number of points that can be considered by occlude_list function.</li>\n<li><strong>alpha</strong>: The alpha parameter (&gt;=1) is used to control the nature and number of points that are added to the\ngraph. A higher alpha value (e.g., 1.4) will result in fewer hops (and IOs) to convergence, but probably\nmore distance comparisons compared to a lower alpha value.</li>\n<li><strong>num_threads</strong>: Number of threads to use when creating this index. <code>0</code> indicates we should use all available\nlogical processors.</li>\n<li><strong>filter_complexity</strong>: Complexity to use when using filters. Default is 0.</li>\n<li><strong>num_frozen_points</strong>: Number of points to freeze. Default is 1.</li>\n<li><strong>initial_search_complexity</strong>: Should be set to the most common <code>complexity</code> expected to be used during the\nlife of this <code>diskannpy.DynamicMemoryIndex</code> object. The working scratch memory allocated is based off of\n<code>initial_search_complexity</code> * <code>search_threads</code>. Note that it may be resized if a <code>search</code> or <code>batch_search</code>\noperation requests a space larger than can be accommodated by these values.</li>\n<li><strong>search_threads</strong>: Should be set to the most common <code>num_threads</code> expected to be used during the\nlife of this <code>diskannpy.DynamicMemoryIndex</code> object. The working scratch memory allocated is based off of\n<code>initial_search_complexity</code> * <code>search_threads</code>. Note that it may be resized if a <code>batch_search</code>\noperation requests a space larger than can be accommodated by these values.</li>\n<li><strong>concurrent_consolidation</strong>: This flag dictates whether consolidation can be run alongside inserts and\ndeletes, or whether the index is locked down to changes while consolidation is ongoing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_vectors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">graph_degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">saturate_graph</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">max_occlusion_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">750</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2000000476837158</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_frozen_points</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">initial_search_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">search_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">concurrent_consolidation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "diskannpy.DynamicMemoryIndex.from_file": {"fullname": "diskannpy.DynamicMemoryIndex.from_file", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.from_file", "kind": "function", "doc": "<p>The <code>from_file</code> classmethod is used to load a previously saved index from disk. This index <em>must</em> have been\ncreated with a valid <code>tags</code> file or <code>tags</code> np.ndarray of <code>diskannpy.VectorIdentifier</code>s. It is <em>strongly</em>\nrecommended that you use the same parameters as the <code>diskannpy.build_memory_index()</code> function that created\nthe index.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><p><strong>index_directory</strong>: The directory containing the index files. This directory must contain the following\n  files:</p>\n\n<ul>\n<li><code>{index_prefix}.data</code></li>\n<li><code>{index_prefix}.tags</code></li>\n<li><code>{index_prefix}</code></li>\n</ul>\n\n<p>It may also include the following optional files:</p>\n\n<ul>\n<li><code>{index_prefix}_vectors.bin</code>: Optional. <code>diskannpy</code> builder functions may create this file in the\n<code>index_directory</code> if the index was created from a numpy array</li>\n<li><code>{index_prefix}_metadata.bin</code>: Optional. <code>diskannpy</code> builder functions create this file to store metadata\nabout the index, such as vector dtype, distance metric, number of vectors and vector dimensionality.\nIf an index is built from the <code>diskann</code> cli tools, this file will not exist.</li>\n</ul></li>\n<li><strong>max_vectors</strong>: Capacity of the memory index including space for future insertions.</li>\n<li><strong>complexity</strong>: Complexity (a.k.a <code>L</code>) references the size of the list we store candidate approximate\nneighbors in. It's used during save (which is an index rebuild), and it's used as an initial search size to\nwarm up our index and lower the latency for initial real searches.</li>\n<li><strong>graph_degree</strong>: Graph degree (a.k.a. <code>R</code>) is the maximum degree allowed for a node in the index's graph\nstructure. This degree will be pruned throughout the course of the index build, but it will never grow beyond\nthis value. Higher R values require longer index build times, but may result in an index showing excellent\nrecall and latency characteristics.</li>\n<li><strong>saturate_graph</strong>: If True, the adjacency list of each node will be saturated with neighbors to have exactly\n<code>graph_degree</code> neighbors. If False, each node will have between 1 and <code>graph_degree</code> neighbors.</li>\n<li><strong>max_occlusion_size</strong>: The maximum number of points that can be considered by occlude_list function.</li>\n<li><strong>alpha</strong>: The alpha parameter (&gt;=1) is used to control the nature and number of points that are added to the\ngraph. A higher alpha value (e.g., 1.4) will result in fewer hops (and IOs) to convergence, but probably\nmore distance comparisons compared to a lower alpha value.</li>\n<li><strong>num_threads</strong>: Number of threads to use when creating this index. <code>0</code> indicates we should use all available\nlogical processors.</li>\n<li><strong>filter_complexity</strong>: Complexity to use when using filters. Default is 0.</li>\n<li><strong>num_frozen_points</strong>: Number of points to freeze. Default is 1.</li>\n<li><strong>initial_search_complexity</strong>: Should be set to the most common <code>complexity</code> expected to be used during the\nlife of this <code>diskannpy.DynamicMemoryIndex</code> object. The working scratch memory allocated is based off of\n<code>initial_search_complexity</code> * <code>search_threads</code>. Note that it may be resized if a <code>search</code> or <code>batch_search</code>\noperation requests a space larger than can be accommodated by these values.</li>\n<li><strong>search_threads</strong>: Should be set to the most common <code>num_threads</code> expected to be used during the\nlife of this <code>diskannpy.DynamicMemoryIndex</code> object. The working scratch memory allocated is based off of\n<code>initial_search_complexity</code> * <code>search_threads</code>. Note that it may be resized if a <code>batch_search</code>\noperation requests a space larger than can be accommodated by these values.</li>\n<li><strong>concurrent_consolidation</strong>: This flag dictates whether consolidation can be run alongside inserts and\ndeletes, or whether the index is locked down to changes while consolidation is ongoing.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n<li><strong>distance_metric</strong>: A <code>str</code>, strictly one of {\"l2\", \"mips\", \"cosine\"}. <code>l2</code> and <code>cosine</code> are supported for all 3\nvector dtypes, but <code>mips</code> is only available for single precision floats. Default is <code>None</code>. <strong>This\nvalue is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist,\nyou are required to provide it.</li>\n<li><strong>vector_dtype</strong>: The vector dtype this index has been built with. <strong>This value is only used if a\n<code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it does not exist, you are required to provide it.</li>\n<li><strong>dimensions</strong>: The vector dimensionality of this index. All new vectors inserted must be the same\ndimensionality. <strong>This value is only used if a <code>{index_prefix}_metadata.bin</code> file does not exist.</strong> If it\ndoes not exist, you are required to provide it.</li>\n</ul>\n\n<h3 id=\"returns\">Returns</h3>\n\n<p>A <code>diskannpy.DynamicMemoryIndex</code> object, with the index loaded from disk and ready to use for insertions,\ndeletions, and searches.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">index_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_vectors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">graph_degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">saturate_graph</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">max_occlusion_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">750</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2000000476837158</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">filter_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_frozen_points</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">initial_search_complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">search_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">concurrent_consolidation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;l2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mips&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">_dynamic_memory_index</span><span class=\"o\">.</span><span class=\"n\">DynamicMemoryIndex</span>:</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.search": {"fullname": "diskannpy.DynamicMemoryIndex.search", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.search", "kind": "function", "doc": "<p>Searches the index by a single query vector.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>query</strong>: 1d numpy array of the same dimensionality and dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponse</span>:</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.batch_search": {"fullname": "diskannpy.DynamicMemoryIndex.batch_search", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.batch_search", "kind": "function", "doc": "<p>Searches the index by a batch of query vectors.</p>\n\n<p>This search is parallelized and far more efficient than searching for each vector individually.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>queries</strong>: 2d numpy array, with column dimensionality matching the index and row dimensionality being the\nnumber of queries intended to search for in parallel. Dtype must match dtype of the index.</li>\n<li><strong>k_neighbors</strong>: Number of neighbors to be returned. If query vector exists in index, it almost definitely\nwill be returned as well, so adjust your <code>k_neighbors</code> as appropriate. Must be &gt; 0.</li>\n<li><strong>complexity</strong>: Size of distance ordered list of candidate neighbors to use while searching. List size\nincreases accuracy at the cost of latency. Must be at least k_neighbors in size.</li>\n<li><strong>num_threads</strong>: Number of threads to use when searching this index. (&gt;= 0), 0 = num_threads in system</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">queries</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">complexity</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">QueryResponseBatch</span>:</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.save": {"fullname": "diskannpy.DynamicMemoryIndex.save", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.save", "kind": "function", "doc": "<p>Saves this index to file.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>save_path</strong>: The path to save these index files to.</li>\n<li><strong>index_prefix</strong>: The prefix of the index files. Defaults to \"ann\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">index_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ann&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.insert": {"fullname": "diskannpy.DynamicMemoryIndex.insert", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.insert", "kind": "function", "doc": "<p>Inserts a single vector into the index with the provided vector_id.</p>\n\n<p>If this insertion will overrun the <code>max_vectors</code> count boundaries of this index, <code>consolidate_delete()</code> will\nbe executed automatically.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vector</strong>: The vector to insert. Note that dtype must match.</li>\n<li><strong>vector_id</strong>: The vector_id to use for this vector.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">vector_id</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.batch_insert": {"fullname": "diskannpy.DynamicMemoryIndex.batch_insert", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.batch_insert", "kind": "function", "doc": "<p>Inserts a batch of vectors into the index with the provided vector_ids.</p>\n\n<p>If this batch insertion will overrun the <code>max_vectors</code> count boundaries of this index, <code>consolidate_delete()</code>\nwill be executed automatically.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vectors</strong>: The 2d numpy array of vectors to insert.</li>\n<li><strong>vector_ids</strong>: The 1d array of vector ids to use. This array must have the same number of elements as\nthe vectors array has rows. The dtype of vector_ids must be <code>np.uint32</code></li>\n<li><strong>num_threads</strong>: Number of threads to use when inserting into this index. (&gt;= 0), 0 = num_threads in system</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">vectors</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>,</span><span class=\"param\">\t<span class=\"n\">vector_ids</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">num_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"fullname": "diskannpy.DynamicMemoryIndex.mark_deleted", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.mark_deleted", "kind": "function", "doc": "<p>Mark vector for deletion. This is a soft delete that won't return the vector id in any results, but does not\nremove it from the underlying index files or memory structure. To execute a hard delete, call this method and\nthen call the much more expensive <code>consolidate_delete</code> method on this index.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vector_id</strong>: The vector id to delete. Must be a uint32.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vector_id</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"fullname": "diskannpy.DynamicMemoryIndex.consolidate_delete", "modulename": "diskannpy", "qualname": "DynamicMemoryIndex.consolidate_delete", "kind": "function", "doc": "<p>This method actually restructures the DiskANN index to remove the items that have been marked for deletion.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "diskannpy.DistanceMetric": {"fullname": "diskannpy.DistanceMetric", "modulename": "diskannpy", "qualname": "DistanceMetric", "kind": "variable", "doc": "<p>Type alias for one of {\"l2\", \"mips\", \"cosine\"}</p>\n", "default_value": "typing.Literal[&#x27;l2&#x27;, &#x27;mips&#x27;, &#x27;cosine&#x27;]"}, "diskannpy.VectorDType": {"fullname": "diskannpy.VectorDType", "modulename": "diskannpy", "qualname": "VectorDType", "kind": "variable", "doc": "<p>Type alias for one of {<code>numpy.float32</code>, <code>numpy.int8</code>, <code>numpy.uint8</code>}</p>\n", "default_value": "typing.Union[typing.Type[numpy.float32], typing.Type[numpy.int8], typing.Type[numpy.uint8]]"}, "diskannpy.QueryResponse": {"fullname": "diskannpy.QueryResponse", "modulename": "diskannpy", "qualname": "QueryResponse", "kind": "class", "doc": "<p>Tuple with two values, identifiers and distances. Both are 1d arrays, positionally correspond, and will contain the\nnearest neighbors from [0..k_neighbors)</p>\n", "bases": "typing.NamedTuple"}, "diskannpy.QueryResponse.__init__": {"fullname": "diskannpy.QueryResponse.__init__", "modulename": "diskannpy", "qualname": "QueryResponse.__init__", "kind": "function", "doc": "<p>Create new instance of QueryResponse(identifiers, distances)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">identifiers</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">distances</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">]]</span></span>)</span>"}, "diskannpy.QueryResponse.identifiers": {"fullname": "diskannpy.QueryResponse.identifiers", "modulename": "diskannpy", "qualname": "QueryResponse.identifiers", "kind": "variable", "doc": "<p>A <code>numpy.typing.NDArray[VectorIdentifier]</code> array of vector identifiers, 1 dimensional</p>\n", "annotation": ": numpy.ndarray[typing.Any, numpy.dtype[numpy.uint32]]"}, "diskannpy.QueryResponse.distances": {"fullname": "diskannpy.QueryResponse.distances", "modulename": "diskannpy", "qualname": "QueryResponse.distances", "kind": "variable", "doc": "<p>A <code>numpy.typing.NDAarray[numpy.float32]</code> of distances as calculated by the distance metric function,  1 dimensional</p>\n", "annotation": ": numpy.ndarray[typing.Any, numpy.dtype[numpy.float32]]"}, "diskannpy.QueryResponseBatch": {"fullname": "diskannpy.QueryResponseBatch", "modulename": "diskannpy", "qualname": "QueryResponseBatch", "kind": "class", "doc": "<p>Tuple with two values, identifiers and distances. Both are 2d arrays, with dimensionality determined by the\nrows corresponding to the number of queries made, and the columns corresponding to the k neighbors\nrequested. The two 2d arrays have an implicit, position-based relationship</p>\n", "bases": "typing.NamedTuple"}, "diskannpy.QueryResponseBatch.__init__": {"fullname": "diskannpy.QueryResponseBatch.__init__", "modulename": "diskannpy", "qualname": "QueryResponseBatch.__init__", "kind": "function", "doc": "<p>Create new instance of QueryResponseBatch(identifiers, distances)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">identifiers</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">distances</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">]</span></span>)</span>"}, "diskannpy.QueryResponseBatch.identifiers": {"fullname": "diskannpy.QueryResponseBatch.identifiers", "modulename": "diskannpy", "qualname": "QueryResponseBatch.identifiers", "kind": "variable", "doc": "<p>A <code>numpy.typing.NDArray[VectorIdentifier]</code> array of vector identifiers, 2 dimensional. The row corresponds to index \nof the query, and the column corresponds to the k neighbors requested</p>\n", "annotation": ": numpy.ndarray[typing.Any, numpy.dtype[numpy.uint32]]"}, "diskannpy.QueryResponseBatch.distances": {"fullname": "diskannpy.QueryResponseBatch.distances", "modulename": "diskannpy", "qualname": "QueryResponseBatch.distances", "kind": "variable", "doc": "<p>A <code>numpy.typing.NDAarray[numpy.float32]</code> of distances as calculated by the distance metric function, 2 dimensional. \nThe row corresponds to the index of the query, and the column corresponds to the distance of the query to the \n<em>k-th</em> neighbor</p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "diskannpy.VectorIdentifier": {"fullname": "diskannpy.VectorIdentifier", "modulename": "diskannpy", "qualname": "VectorIdentifier", "kind": "variable", "doc": "<p>Type alias for a vector identifier, whether it be an implicit array index identifier from StaticMemoryIndex or \nStaticDiskIndex, or an explicit tag identifier from DynamicMemoryIndex</p>\n", "default_value": "&lt;class &#x27;numpy.uint32&#x27;&gt;"}, "diskannpy.VectorIdentifierBatch": {"fullname": "diskannpy.VectorIdentifierBatch", "modulename": "diskannpy", "qualname": "VectorIdentifierBatch", "kind": "variable", "doc": "<p>Type alias for a batch of VectorIdentifiers</p>\n", "default_value": "numpy.ndarray[typing.Any, numpy.dtype[numpy.uint32]]"}, "diskannpy.VectorLike": {"fullname": "diskannpy.VectorLike", "modulename": "diskannpy", "qualname": "VectorLike", "kind": "variable", "doc": "<p>Type alias for something that can be treated as a vector</p>\n", "default_value": "numpy.ndarray[typing.Any, numpy.dtype[typing.Union[typing.Type[numpy.float32], typing.Type[numpy.int8], typing.Type[numpy.uint8]]]]"}, "diskannpy.VectorLikeBatch": {"fullname": "diskannpy.VectorLikeBatch", "modulename": "diskannpy", "qualname": "VectorLikeBatch", "kind": "variable", "doc": "<p>Type alias for a batch of VectorLikes</p>\n", "default_value": "numpy.ndarray[typing.Any, numpy.dtype[typing.Union[typing.Type[numpy.float32], typing.Type[numpy.int8], typing.Type[numpy.uint8]]]]"}, "diskannpy.Metadata": {"fullname": "diskannpy.Metadata", "modulename": "diskannpy", "qualname": "Metadata", "kind": "class", "doc": "<p>DiskANN binary vector files contain a small stanza containing some metadata about them.</p>\n", "bases": "typing.NamedTuple"}, "diskannpy.Metadata.__init__": {"fullname": "diskannpy.Metadata.__init__", "modulename": "diskannpy", "qualname": "Metadata.__init__", "kind": "function", "doc": "<p>Create new instance of Metadata(num_vectors, dimensions)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_vectors</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "diskannpy.Metadata.num_vectors": {"fullname": "diskannpy.Metadata.num_vectors", "modulename": "diskannpy", "qualname": "Metadata.num_vectors", "kind": "variable", "doc": "<p>The number of vectors in the file.</p>\n", "annotation": ": int"}, "diskannpy.Metadata.dimensions": {"fullname": "diskannpy.Metadata.dimensions", "modulename": "diskannpy", "qualname": "Metadata.dimensions", "kind": "variable", "doc": "<p>The dimensionality of the vectors in the file.</p>\n", "annotation": ": int"}, "diskannpy.vectors_metadata_from_file": {"fullname": "diskannpy.vectors_metadata_from_file", "modulename": "diskannpy", "qualname": "vectors_metadata_from_file", "kind": "function", "doc": "<p>Read the metadata from a DiskANN binary vector file.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vector_file</strong>: The path to the vector file to read the metadata from.</li>\n</ul>\n\n<h3 id=\"returns\">Returns</h3>\n\n<p><code>diskannpy.Metadata</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vector_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">diskannpy</span><span class=\"o\">.</span><span class=\"n\">_files</span><span class=\"o\">.</span><span class=\"n\">Metadata</span>:</span></span>", "funcdef": "def"}, "diskannpy.vectors_to_file": {"fullname": "diskannpy.vectors_to_file", "modulename": "diskannpy", "qualname": "vectors_to_file", "kind": "function", "doc": "<p>Utility function that writes a DiskANN binary vector formatted file to the location of your choosing.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vector_file</strong>: The path to the vector file to write the vectors to.</li>\n<li><strong>vectors</strong>: A 2d array of dtype <code>numpy.float32</code>, <code>numpy.uint8</code>, or <code>numpy.int8</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">vectors</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "diskannpy.vectors_from_file": {"fullname": "diskannpy.vectors_from_file", "modulename": "diskannpy", "qualname": "vectors_from_file", "kind": "function", "doc": "<p>Read vectors from a DiskANN binary vector file.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>vector_file</strong>: The path to the vector file to read the vectors from.</li>\n<li><strong>dtype</strong>: The data type of the vectors in the file. Ensure you match the data types exactly</li>\n</ul>\n\n<h3 id=\"returns\">Returns</h3>\n\n<p><code>numpy.typing.NDArray[dtype]</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]]]</span>:</span></span>", "funcdef": "def"}, "diskannpy.tags_to_file": {"fullname": "diskannpy.tags_to_file", "modulename": "diskannpy", "qualname": "tags_to_file", "kind": "function", "doc": "<p>Write tags to a DiskANN binary tag file.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>tags_file</strong>: The path to the tag file to write the tags to.</li>\n<li><strong>tags</strong>: A 1d array of dtype <code>numpy.uint32</code> containing the tags to write. If you have a 2d array of tags with\none column, you can pass it here and it will be reshaped and copied to a new array. It is more efficient for you\nto reshape on your own without copying it first, as it should be a constant time operation vs. linear time</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tags_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "diskannpy.tags_from_file": {"fullname": "diskannpy.tags_from_file", "modulename": "diskannpy", "qualname": "tags_from_file", "kind": "function", "doc": "<p>Read tags from a DiskANN binary tag file and return them as a 1d array of dtype <code>numpy.uint32</code>.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><strong>tags_file</strong>: The path to the tag file to read the tags from.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tags_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint32</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "diskannpy.valid_dtype": {"fullname": "diskannpy.valid_dtype", "modulename": "diskannpy", "qualname": "valid_dtype", "kind": "function", "doc": "<p>Utility method to determine whether the provided dtype is supported by <code>diskannpy</code>, and if so, the canonical\ndtype we will use internally (e.g. np.single -> np.float32)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Type</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">],</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "diskannpy.defaults": {"fullname": "diskannpy.defaults", "modulename": "diskannpy.defaults", "kind": "module", "doc": "<h1 id=\"parameter-defaults\">Parameter Defaults</h1>\n\n<p>These parameter defaults are re-exported from the C++ extension module, and used to keep the pythonic wrapper in sync with the C++.</p>\n"}, "diskannpy.defaults.ALPHA": {"fullname": "diskannpy.defaults.ALPHA", "modulename": "diskannpy.defaults", "qualname": "ALPHA", "kind": "variable", "doc": "<p>Note that, as ALPHA is a <code>float32</code> (single precision float) in C++, when converted into Python it becomes a \n<code>float64</code> (double precision float). The actual value is 1.2f. The alpha parameter (&gt;=1) is used to control the nature \nand number of points that are added to the graph. A higher alpha value (e.g., 1.4) will result in fewer hops (and IOs) \nto convergence, but probably more distance comparisons compared to a lower alpha value.</p>\n", "default_value": "1.2000000476837158"}, "diskannpy.defaults.NUM_THREADS": {"fullname": "diskannpy.defaults.NUM_THREADS", "modulename": "diskannpy.defaults", "qualname": "NUM_THREADS", "kind": "variable", "doc": "<p>Number of threads to use. <code>0</code> will use all available detected logical processors</p>\n", "default_value": "0"}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"fullname": "diskannpy.defaults.MAX_OCCLUSION_SIZE", "modulename": "diskannpy.defaults", "qualname": "MAX_OCCLUSION_SIZE", "kind": "variable", "doc": "<p>The maximum number of points that can be occluded by a single point. This is used to  prevent a single point from \ndominating the graph structure. If a point has more than <code>max_occlusion_size</code> neighbors closer to it than the current \npoint, it will not be added to the graph. This is a tradeoff between index build time and search quality.</p>\n", "default_value": "750"}, "diskannpy.defaults.FILTER_COMPLEXITY": {"fullname": "diskannpy.defaults.FILTER_COMPLEXITY", "modulename": "diskannpy.defaults", "qualname": "FILTER_COMPLEXITY", "kind": "variable", "doc": "<p>Complexity (a.k.a. <code>L</code>) references the size of the list we store candidate approximate neighbors in while doing a \nfiltered search. This value must be larger than <code>k_neighbors</code>, and larger values tend toward higher recall in the \nresultant ANN search at the cost of more time.</p>\n", "default_value": "0"}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"fullname": "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC", "modulename": "diskannpy.defaults", "qualname": "NUM_FROZEN_POINTS_STATIC", "kind": "variable", "doc": "<p>Number of points frozen by default in a StaticMemoryIndex</p>\n", "default_value": "0"}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"fullname": "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC", "modulename": "diskannpy.defaults", "qualname": "NUM_FROZEN_POINTS_DYNAMIC", "kind": "variable", "doc": "<p>Number of points frozen by default in a DynamicMemoryIndex</p>\n", "default_value": "1"}, "diskannpy.defaults.SATURATE_GRAPH": {"fullname": "diskannpy.defaults.SATURATE_GRAPH", "modulename": "diskannpy.defaults", "qualname": "SATURATE_GRAPH", "kind": "variable", "doc": "<p>Whether to saturate the graph or not. Default is <code>True</code></p>\n", "default_value": "0"}, "diskannpy.defaults.GRAPH_DEGREE": {"fullname": "diskannpy.defaults.GRAPH_DEGREE", "modulename": "diskannpy.defaults", "qualname": "GRAPH_DEGREE", "kind": "variable", "doc": "<p>Graph degree (a.k.a. <code>R</code>) is the maximum degree allowed for a node in the index's graph structure. This degree will be \npruned throughout the course of the index build, but it will never grow beyond this value. Higher R values require \nlonger index build times, but may result in an index showing excellent recall and latency characteristics.</p>\n", "default_value": "64"}, "diskannpy.defaults.COMPLEXITY": {"fullname": "diskannpy.defaults.COMPLEXITY", "modulename": "diskannpy.defaults", "qualname": "COMPLEXITY", "kind": "variable", "doc": "<p>Complexity (a.k.a <code>L</code>) references the size of the list we store candidate approximate neighbors in while doing build\nor search tasks. It's used during index build as part of the index optimization processes. It's used in index search \nclasses both to help mitigate poor latencies during cold start, as well as on subsequent queries to conduct the search. \nLarge values will likely increase latency but also may improve recall, and tuning these values for your particular \nindex is certainly a reasonable choice.</p>\n", "default_value": "100"}, "diskannpy.defaults.PQ_DISK_BYTES": {"fullname": "diskannpy.defaults.PQ_DISK_BYTES", "modulename": "diskannpy.defaults", "qualname": "PQ_DISK_BYTES", "kind": "variable", "doc": "<p>Use <code>0</code> to store uncompressed data on SSD. This allows the index to asymptote to 100% recall. If your vectors are \ntoo large to store in SSD, this parameter provides the option to compress the vectors using PQ for storing on SSD. \nThis will trade off recall. You would also want this to be greater than the number of bytes used for the PQ \ncompressed data stored in-memory. Default is <code>0</code>.</p>\n", "default_value": "0"}, "diskannpy.defaults.USE_PQ_BUILD": {"fullname": "diskannpy.defaults.USE_PQ_BUILD", "modulename": "diskannpy.defaults", "qualname": "USE_PQ_BUILD", "kind": "variable", "doc": "<p>Whether to use product quantization in the index building process. Product quantization is an approximation \ntechnique that can vastly speed up vector computations and comparisons in a spatial neighborhood, but it is still an \napproximation technique. It should be preferred when index creation times take longer than you can afford for your \nuse case.</p>\n", "default_value": "False"}, "diskannpy.defaults.NUM_PQ_BYTES": {"fullname": "diskannpy.defaults.NUM_PQ_BYTES", "modulename": "diskannpy.defaults", "qualname": "NUM_PQ_BYTES", "kind": "variable", "doc": "<p>The number of product quantization bytes to use. More bytes requires more resources in both memory and time, but is \nlike to result in better approximations.</p>\n", "default_value": "0"}, "diskannpy.defaults.USE_OPQ": {"fullname": "diskannpy.defaults.USE_OPQ", "modulename": "diskannpy.defaults", "qualname": "USE_OPQ", "kind": "variable", "doc": "<p>Whether to use Optimized Product Quantization or not.</p>\n", "default_value": "False"}}, "docInfo": {"diskannpy": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 540}, "diskannpy.build_disk_index": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 327, "bases": 0, "doc": 660}, "diskannpy.build_memory_index": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 495, "bases": 0, "doc": 935}, "diskannpy.StaticDiskIndex": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "diskannpy.StaticDiskIndex.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 231, "bases": 0, "doc": 482}, "diskannpy.StaticDiskIndex.search": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 167, "bases": 0, "doc": 213}, "diskannpy.StaticDiskIndex.batch_search": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 179, "bases": 0, "doc": 271}, "diskannpy.StaticMemoryIndex": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "diskannpy.StaticMemoryIndex.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 230, "bases": 0, "doc": 459}, "diskannpy.StaticMemoryIndex.search": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 170, "bases": 0, "doc": 111}, "diskannpy.StaticMemoryIndex.batch_search": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 169}, "diskannpy.DynamicMemoryIndex": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 125}, "diskannpy.DynamicMemoryIndex.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 323, "bases": 0, "doc": 607}, "diskannpy.DynamicMemoryIndex.from_file": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 419, "bases": 0, "doc": 951}, "diskannpy.DynamicMemoryIndex.search": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 111}, "diskannpy.DynamicMemoryIndex.batch_search": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 169}, "diskannpy.DynamicMemoryIndex.save": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 46}, "diskannpy.DynamicMemoryIndex.insert": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 134, "bases": 0, "doc": 79}, "diskannpy.DynamicMemoryIndex.batch_insert": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 128}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 81}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 20}, "diskannpy.DistanceMetric": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 12}, "diskannpy.VectorDType": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 19}, "diskannpy.QueryResponse": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 26}, "diskannpy.QueryResponse.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 10}, "diskannpy.QueryResponse.identifiers": {"qualname": 2, "fullname": 3, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "diskannpy.QueryResponse.distances": {"qualname": 2, "fullname": 3, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "diskannpy.QueryResponseBatch": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 45}, "diskannpy.QueryResponseBatch.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 10}, "diskannpy.QueryResponseBatch.identifiers": {"qualname": 2, "fullname": 3, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "diskannpy.QueryResponseBatch.distances": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 46}, "diskannpy.VectorIdentifier": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 27}, "diskannpy.VectorIdentifierBatch": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 9}, "diskannpy.VectorLike": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 13}, "diskannpy.VectorLikeBatch": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 9}, "diskannpy.Metadata": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "diskannpy.Metadata.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 11}, "diskannpy.Metadata.num_vectors": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "diskannpy.Metadata.dimensions": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "diskannpy.vectors_metadata_from_file": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 46}, "diskannpy.vectors_to_file": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 67}, "diskannpy.vectors_from_file": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 171, "bases": 0, "doc": 67}, "diskannpy.tags_to_file": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 108}, "diskannpy.tags_from_file": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 49}, "diskannpy.valid_dtype": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 34}, "diskannpy.defaults": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "diskannpy.defaults.ALPHA": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 85}, "diskannpy.defaults.NUM_THREADS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 17}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 67}, "diskannpy.defaults.FILTER_COMPLEXITY": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 55}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}, "diskannpy.defaults.SATURATE_GRAPH": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 14}, "diskannpy.defaults.GRAPH_DEGREE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 65}, "diskannpy.defaults.COMPLEXITY": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 91}, "diskannpy.defaults.PQ_DISK_BYTES": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 79}, "diskannpy.defaults.USE_PQ_BUILD": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 57}, "diskannpy.defaults.NUM_PQ_BYTES": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 29}, "diskannpy.defaults.USE_OPQ": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}}, "length": 59, "save": true}, "index": {"qualname": {"root": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.Metadata.dimensions": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.Metadata": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}, "x": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 4}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 4}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.VectorDType": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.VectorLike": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "q": {"docs": {"diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {"diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 2}}}}}, "fullname": {"root": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 59}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.Metadata.dimensions": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 14}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.Metadata": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}, "x": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 4}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 4}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.VectorDType": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.VectorLike": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "q": {"docs": {"diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {"diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 2}}}}}, "annotation": {"root": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.distances": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 3}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}}, "df": 2}}}}}, "default_value": {"root": {"0": {"docs": {"diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 6}, "1": {"0": {"0": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 2}, "2": {"0": {"0": {"0": {"0": {"0": {"0": {"4": {"7": {"6": {"8": {"3": {"7": {"1": {"5": {"8": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"5": {"0": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1.7320508075688772}, "diskannpy.VectorLike": {"tf": 1.4142135623730951}, "diskannpy.VectorLikeBatch": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.VectorDType": {"tf": 1.7320508075688772}, "diskannpy.VectorLike": {"tf": 1.7320508075688772}, "diskannpy.VectorLikeBatch": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}}, "l": {"2": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}}, "df": 1}}, "x": {"2": {"7": {"docs": {"diskannpy.DistanceMetric": {"tf": 2.449489742783178}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "8": {"docs": {"diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"8": {"docs": {"diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1.4142135623730951}, "diskannpy.VectorLike": {"tf": 1.4142135623730951}, "diskannpy.VectorLikeBatch": {"tf": 1.4142135623730951}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "signature": {"root": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 5}, "1": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}, "2": {"0": {"0": {"0": {"0": {"0": {"0": {"4": {"7": {"6": {"8": {"3": {"7": {"1": {"5": {"8": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}, "3": {"9": {"docs": {"diskannpy.build_disk_index": {"tf": 2.8284271247461903}, "diskannpy.build_memory_index": {"tf": 3.4641016151377544}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}}, "df": 8}, "docs": {}, "df": 0}, "7": {"5": {"0": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"diskannpy.build_disk_index": {"tf": 15.874507866387544}, "diskannpy.build_memory_index": {"tf": 19.672315572906}, "diskannpy.StaticDiskIndex.__init__": {"tf": 13.341664064126334}, "diskannpy.StaticDiskIndex.search": {"tf": 11.575836902790225}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 11.958260743101398}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 13.341664064126334}, "diskannpy.StaticMemoryIndex.search": {"tf": 11.661903789690601}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 11.313708498984761}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 15.811388300841896}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 18.027756377319946}, "diskannpy.DynamicMemoryIndex.search": {"tf": 10.908712114635714}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 11.313708498984761}, "diskannpy.DynamicMemoryIndex.save": {"tf": 5.830951894845301}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 10.392304845413264}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 12.165525060596439}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 4.69041575982343}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 3.1622776601683795}, "diskannpy.QueryResponse.__init__": {"tf": 8.94427190999916}, "diskannpy.QueryResponseBatch.__init__": {"tf": 8}, "diskannpy.Metadata.__init__": {"tf": 4.47213595499958}, "diskannpy.vectors_metadata_from_file": {"tf": 5}, "diskannpy.vectors_to_file": {"tf": 10.04987562112089}, "diskannpy.vectors_from_file": {"tf": 11.704699910719626}, "diskannpy.tags_to_file": {"tf": 7.416198487095663}, "diskannpy.tags_from_file": {"tf": 6.708203932499369}, "diskannpy.valid_dtype": {"tf": 7.280109889280518}}, "df": 26, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.__init__": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 21}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6, "s": {"docs": {"diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 17}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "8": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 17}, "docs": {}, "df": 0}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 11, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 2.8284271247461903}, "diskannpy.build_memory_index": {"tf": 3.3166247903554}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 2.449489742783178}, "diskannpy.QueryResponseBatch.__init__": {"tf": 2.23606797749979}, "diskannpy.vectors_to_file": {"tf": 2.23606797749979}, "diskannpy.vectors_from_file": {"tf": 2.8284271247461903}, "diskannpy.tags_to_file": {"tf": 1.7320508075688772}, "diskannpy.tags_from_file": {"tf": 1.7320508075688772}, "diskannpy.valid_dtype": {"tf": 1.7320508075688772}}, "df": 22}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.__init__": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1.4142135623730951}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 16}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.__init__": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 16}, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 2.449489742783178}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.7320508075688772}, "diskannpy.vectors_to_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_from_file": {"tf": 2.449489742783178}, "diskannpy.valid_dtype": {"tf": 2}}, "df": 17}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2.449489742783178}, "diskannpy.QueryResponse.__init__": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 2.23606797749979}, "diskannpy.vectors_from_file": {"tf": 2.23606797749979}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 14}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 10}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 19}, "docs": {}, "df": 0}, "docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4, "s": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 5, "s": {"docs": {"diskannpy.vectors_metadata_from_file": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"8": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 17}, "docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.1622776601683795}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.1622776601683795}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1.4142135623730951}}, "df": 14}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2, "s": {"docs": {"diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.vectors_metadata_from_file": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"2": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}}, "df": 2, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 11}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "q": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 12, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "q": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}}}}}, "k": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 16}, "1": {"0": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "6": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.7320508075688772}}, "df": 11, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 7}}, "2": {"0": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 6, "d": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 7}, "f": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}, "3": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}, "4": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 6}, "6": {"0": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "7": {"5": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "8": {"6": {"1": {"7": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}, "docs": {"diskannpy": {"tf": 12.884098726725126}, "diskannpy.build_disk_index": {"tf": 14}, "diskannpy.build_memory_index": {"tf": 15.264337522473747}, "diskannpy.StaticDiskIndex": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 11.40175425099138}, "diskannpy.StaticDiskIndex.search": {"tf": 5.5677643628300215}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 6.164414002968976}, "diskannpy.StaticMemoryIndex": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 11}, "diskannpy.StaticMemoryIndex.search": {"tf": 5.0990195135927845}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 5.744562646538029}, "diskannpy.DynamicMemoryIndex": {"tf": 4.795831523312719}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 11.61895003862225}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 14.696938456699069}, "diskannpy.DynamicMemoryIndex.search": {"tf": 5.0990195135927845}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 5.744562646538029}, "diskannpy.DynamicMemoryIndex.save": {"tf": 4.358898943540674}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 5.196152422706632}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 5.656854249492381}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 4}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1.7320508075688772}, "diskannpy.DistanceMetric": {"tf": 2}, "diskannpy.VectorDType": {"tf": 2.8284271247461903}, "diskannpy.QueryResponse": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse.__init__": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse.identifiers": {"tf": 2}, "diskannpy.QueryResponse.distances": {"tf": 2}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1.7320508075688772}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 2}, "diskannpy.QueryResponseBatch.distances": {"tf": 2.449489742783178}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}, "diskannpy.VectorIdentifierBatch": {"tf": 1.4142135623730951}, "diskannpy.VectorLike": {"tf": 1.4142135623730951}, "diskannpy.VectorLikeBatch": {"tf": 1.4142135623730951}, "diskannpy.Metadata": {"tf": 1.7320508075688772}, "diskannpy.Metadata.__init__": {"tf": 1.7320508075688772}, "diskannpy.Metadata.num_vectors": {"tf": 1.7320508075688772}, "diskannpy.Metadata.dimensions": {"tf": 1.7320508075688772}, "diskannpy.vectors_metadata_from_file": {"tf": 4.47213595499958}, "diskannpy.vectors_to_file": {"tf": 4.898979485566356}, "diskannpy.vectors_from_file": {"tf": 4.898979485566356}, "diskannpy.tags_to_file": {"tf": 4.47213595499958}, "diskannpy.tags_from_file": {"tf": 4}, "diskannpy.valid_dtype": {"tf": 2.449489742783178}, "diskannpy.defaults": {"tf": 2.23606797749979}, "diskannpy.defaults.ALPHA": {"tf": 2.6457513110645907}, "diskannpy.defaults.NUM_THREADS": {"tf": 2}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 2.23606797749979}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 2.6457513110645907}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1.4142135623730951}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 2}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 2.23606797749979}, "diskannpy.defaults.COMPLEXITY": {"tf": 2.23606797749979}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 2.6457513110645907}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.7320508075688772}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_OPQ": {"tf": 1.7320508075688772}}, "df": 59, "d": {"docs": {}, "df": 0, "o": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 5}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 7, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 15, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 2.8284271247461903}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.6457513110645907}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 9}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 16, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}}, "df": 12}}}}}, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 7}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 11, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.defaults": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 2}}, "df": 3, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 3, "s": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.7320508075688772}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 2, "d": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.build_disk_index": {"tf": 2.449489742783178}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 8, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 3.1622776601683795}, "diskannpy.build_memory_index": {"tf": 4}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticDiskIndex.search": {"tf": 3.1622776601683795}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 3.4641016151377544}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticMemoryIndex.search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.872983346207417}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 4.123105625617661}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2.6457513110645907}, "diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.distances": {"tf": 1.7320508075688772}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 45, "f": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 4, "s": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}, "n": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 9}, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}}, "df": 6}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 15, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2, "d": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 3}, "diskannpy.build_memory_index": {"tf": 4}, "diskannpy.StaticDiskIndex": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.1622776601683795}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 4.123105625617661}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.7320508075688772}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 25, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_disk_index": {"tf": 3.1622776601683795}, "diskannpy.build_memory_index": {"tf": 3.1622776601683795}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 2}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1.4142135623730951}}, "df": 30, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 3.7416573867739413}, "diskannpy.build_memory_index": {"tf": 3.605551275463989}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 5}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 4.242640687119285}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.3166247903554}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 5.656854249492381}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.save": {"tf": 2}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 2}, "diskannpy.defaults.COMPLEXITY": {"tf": 2}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 29, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.7320508075688772}, "diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2.8284271247461903}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}}}, "t": {"8": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0, "o": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.605551275463989}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 2.23606797749979}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 22, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 7}}}}, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2}}, "df": 2}}, "f": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 3.1622776601683795}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 3}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.4641016151377544}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 19}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1.4142135623730951}}, "df": 13}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 3}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 12}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 8, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1.7320508075688772}}, "df": 7}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 17}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DistanceMetric": {"tf": 1}}, "df": 7}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}}, "df": 6, "t": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 5, "d": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}}, "df": 6}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.Metadata": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 9, "d": {"docs": {"diskannpy": {"tf": 1.7320508075688772}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 2.8284271247461903}, "diskannpy.build_disk_index": {"tf": 2.449489742783178}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.search": {"tf": 2}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.1622776601683795}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.7320508075688772}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 7}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 8}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 11}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}, "s": {"docs": {"diskannpy.DynamicMemoryIndex.save": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}}, "df": 3, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.Metadata": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}}, "df": 13}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 13, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.7320508075688772}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 6}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.VectorLike": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 3}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"diskannpy": {"tf": 4}, "diskannpy.build_disk_index": {"tf": 3.4641016151377544}, "diskannpy.build_memory_index": {"tf": 4.795831523312719}, "diskannpy.StaticDiskIndex": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.605551275463989}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 4.358898943540674}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 2.23606797749979}, "diskannpy.tags_from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 2}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 2}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.7320508075688772}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.7320508075688772}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 41, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 2.6457513110645907}, "diskannpy.build_memory_index": {"tf": 3.1622776601683795}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.7320508075688772}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 18, "s": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "n": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2.6457513110645907}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 12, "d": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 3.605551275463989}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.3166247903554}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 30}, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 7}, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.defaults.ALPHA": {"tf": 2}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.7320508075688772}}, "df": 21, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 7}}}}}}}}, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 10}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 6}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 5}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 5, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 6}, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 3.605551275463989}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 3}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.1622776601683795}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 8, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 21}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 8}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 2}}, "df": 1, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponse": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"diskannpy.build_memory_index": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}, "t": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 15}}, "e": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 3}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.search": {"tf": 2}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.7416573867739413}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3.605551275463989}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 25, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 10}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 3.1622776601683795}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}}, "df": 6, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 7}}}}}, "y": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 18, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1.4142135623730951}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}}, "df": 7, "s": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 2.23606797749979}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"diskannpy": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 3.4641016151377544}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_to_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_from_file": {"tf": 2}, "diskannpy.tags_to_file": {"tf": 1.7320508075688772}, "diskannpy.tags_from_file": {"tf": 1.7320508075688772}}, "df": 15, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_disk_index": {"tf": 2.8284271247461903}, "diskannpy.build_memory_index": {"tf": 3.7416573867739413}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 26, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1.4142135623730951}, "diskannpy.vectors_metadata_from_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 14}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}, "g": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 9}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"diskannpy.defaults.ALPHA": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.defaults": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": null}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 5}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 13}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DistanceMetric": {"tf": 1}}, "df": 7}}}, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.QueryResponse": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"diskannpy.QueryResponseBatch.identifiers": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.distances": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 6, "s": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 10, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 11}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.valid_dtype": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 2.449489742783178}}, "df": 1}}}, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}}, "df": 1, "d": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 7, "d": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.Metadata.__init__": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 22}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 2}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_STATIC": {"tf": 1}, "diskannpy.defaults.NUM_FROZEN_POINTS_DYNAMIC": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.vectors_from_file": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "p": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1.4142135623730951}}, "df": 6}, "o": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.6457513110645907}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 10, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 4, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 3, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.QueryResponse": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 14}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 9}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 2.449489742783178}, "diskannpy.build_memory_index": {"tf": 3}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 21, "r": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 3}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "8": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"2": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DistanceMetric": {"tf": 1}}, "df": 7}, "docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 4, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}}, "df": 8}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}}, "df": 2, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 5}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 12, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 2.449489742783178}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.DistanceMetric": {"tf": 1}, "diskannpy.VectorDType": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorIdentifierBatch": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.VectorLikeBatch": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 10, "s": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {"diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 1, "e": {"docs": {"diskannpy": {"tf": 2.6457513110645907}, "diskannpy.build_disk_index": {"tf": 4.47213595499958}, "diskannpy.build_memory_index": {"tf": 5.5677643628300215}, "diskannpy.StaticDiskIndex.__init__": {"tf": 4}, "diskannpy.StaticDiskIndex.search": {"tf": 3}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 3.1622776601683795}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 4}, "diskannpy.StaticMemoryIndex.search": {"tf": 2}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 4.795831523312719}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 6.164414002968976}, "diskannpy.DynamicMemoryIndex.search": {"tf": 2}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 2}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponse.distances": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 2.23606797749979}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 2}, "diskannpy.QueryResponseBatch.distances": {"tf": 2.8284271247461903}, "diskannpy.Metadata.num_vectors": {"tf": 1.4142135623730951}, "diskannpy.Metadata.dimensions": {"tf": 1.7320508075688772}, "diskannpy.vectors_metadata_from_file": {"tf": 2}, "diskannpy.vectors_to_file": {"tf": 2}, "diskannpy.vectors_from_file": {"tf": 2.6457513110645907}, "diskannpy.tags_to_file": {"tf": 2}, "diskannpy.tags_from_file": {"tf": 1.7320508075688772}, "diskannpy.valid_dtype": {"tf": 1.4142135623730951}, "diskannpy.defaults": {"tf": 1.7320508075688772}, "diskannpy.defaults.ALPHA": {"tf": 2}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 2}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 2}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 2}, "diskannpy.defaults.COMPLEXITY": {"tf": 2}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 2.23606797749979}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 42, "m": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 3}, "y": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 6}}, "n": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 2.6457513110645907}, "diskannpy.StaticDiskIndex": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 15}, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 12}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 3}, "diskannpy.build_memory_index": {"tf": 3}, "diskannpy.StaticDiskIndex.__init__": {"tf": 3.1622776601683795}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 3.3166247903554}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 4}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.save": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 2}}, "df": 20}, "r": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.7320508075688772}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}}, "df": 12}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {"diskannpy": {"tf": 3.3166247903554}, "diskannpy.build_disk_index": {"tf": 4.123105625617661}, "diskannpy.build_memory_index": {"tf": 4.898979485566356}, "diskannpy.StaticDiskIndex.__init__": {"tf": 3.605551275463989}, "diskannpy.StaticDiskIndex.search": {"tf": 2}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex": {"tf": 2.23606797749979}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 3.872983346207417}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 4.58257569495584}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 2}, "diskannpy.DynamicMemoryIndex.save": {"tf": 2}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.distances": {"tf": 1.7320508075688772}, "diskannpy.vectors_metadata_from_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_to_file": {"tf": 2}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.tags_to_file": {"tf": 2.6457513110645907}, "diskannpy.tags_from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 2}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.7320508075688772}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 2.449489742783178}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1.4142135623730951}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 38, "o": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.tags_to_file": {"tf": 2.449489742783178}, "diskannpy.tags_from_file": {"tf": 1.7320508075688772}}, "df": 5}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 7, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.VectorLike": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 9}, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 7}}, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 2}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1.4142135623730951}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults": {"tf": 1}}, "df": 16, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 2.6457513110645907}, "diskannpy.build_memory_index": {"tf": 2.8284271247461903}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 2.23606797749979}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.23606797749979}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1.4142135623730951}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.NUM_THREADS": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 25}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1.7320508075688772}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 13}, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 2.23606797749979}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 3}}, "s": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"diskannpy.vectors_to_file": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.defaults.ALPHA": {"tf": 1.7320508075688772}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 9, "s": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1.4142135623730951}}, "df": 11}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 3.1622776601683795}, "diskannpy.build_disk_index": {"tf": 2.23606797749979}, "diskannpy.build_memory_index": {"tf": 3.4641016151377544}, "diskannpy.StaticDiskIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.449489742783178}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 2.6457513110645907}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 2}, "diskannpy.QueryResponse.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}, "diskannpy.VectorLike": {"tf": 1}, "diskannpy.Metadata": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_to_file": {"tf": 1.7320508075688772}, "diskannpy.vectors_from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 26, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"diskannpy.VectorIdentifierBatch": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"diskannpy.VectorLikeBatch": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"diskannpy": {"tf": 2.23606797749979}, "diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 2.23606797749979}, "diskannpy.Metadata.__init__": {"tf": 1}, "diskannpy.Metadata.num_vectors": {"tf": 1}, "diskannpy.Metadata.dimensions": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_from_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 19}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}, "r": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.vectors_metadata_from_file": {"tf": 1.4142135623730951}, "diskannpy.vectors_from_file": {"tf": 1.4142135623730951}, "diskannpy.tags_from_file": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"diskannpy": {"tf": 1.7320508075688772}}, "df": 1}, "y": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}, "l": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 1, "s": {"docs": {"diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 9, "s": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy.tags_to_file": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy": {"tf": 1.4142135623730951}, "diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.tags_from_file": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}}, "df": 6}}, "s": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_metadata_from_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"diskannpy.build_disk_index": {"tf": 2}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1.4142135623730951}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 4, "s": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}}, "df": 3}, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.7320508075688772}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}, "diskannpy.DynamicMemoryIndex.consolidate_delete": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}}, "df": 5, "s": {"docs": {"diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 5, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.defaults": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.VectorIdentifier": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.defaults": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.vectors_from_file": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 2.6457513110645907}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.6457513110645907}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.7320508075688772}}, "df": 2}}}, "s": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 6}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.DynamicMemoryIndex.mark_deleted": {"tf": 1}}, "df": 1, "d": {"docs": {"diskannpy.DynamicMemoryIndex.insert": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.StaticMemoryIndex.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.vectors_from_file": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}}, "df": 8}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}}, "df": 4}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 2.6457513110645907}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 2.449489742783178}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1.4142135623730951}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.QueryResponse.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy": {"tf": 1}, "diskannpy.QueryResponseBatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}, "diskannpy.build_memory_index": {"tf": 1.4142135623730951}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_memory_index": {"tf": 1.7320508075688772}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1.4142135623730951}, "diskannpy.defaults.NUM_PQ_BYTES": {"tf": 1}, "diskannpy.defaults.USE_OPQ": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "g": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.valid_dtype": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 2}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 2.8284271247461903}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2.6457513110645907}, "diskannpy.defaults.ALPHA": {"tf": 1}, "diskannpy.defaults.MAX_OCCLUSION_SIZE": {"tf": 1.4142135623730951}, "diskannpy.defaults.SATURATE_GRAPH": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1.4142135623730951}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}}, "df": 3}}}, "b": {"docs": {"diskannpy.build_disk_index": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {"diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.4142135623730951}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.batch_insert": {"tf": 1}, "diskannpy.defaults.ALPHA": {"tf": 1}}, "df": 13}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"diskannpy.StaticDiskIndex.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"diskannpy.build_disk_index": {"tf": 1.7320508075688772}, "diskannpy.build_memory_index": {"tf": 3.4641016151377544}, "diskannpy.StaticDiskIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.__init__": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 2}, "diskannpy.vectors_from_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1.7320508075688772}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 10, "r": {"docs": {"diskannpy.build_disk_index": {"tf": 1}, "diskannpy.build_memory_index": {"tf": 1}, "diskannpy.StaticDiskIndex.search": {"tf": 1}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1}, "diskannpy.StaticMemoryIndex.search": {"tf": 1}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1}, "diskannpy.vectors_to_file": {"tf": 1}, "diskannpy.tags_to_file": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}, "diskannpy.defaults.PQ_DISK_BYTES": {"tf": 1}, "diskannpy.defaults.USE_PQ_BUILD": {"tf": 1}}, "df": 13}}}}, "k": {"docs": {"diskannpy.StaticDiskIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticDiskIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.StaticMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.__init__": {"tf": 1}, "diskannpy.DynamicMemoryIndex.from_file": {"tf": 1.4142135623730951}, "diskannpy.DynamicMemoryIndex.search": {"tf": 1.7320508075688772}, "diskannpy.DynamicMemoryIndex.batch_search": {"tf": 1.7320508075688772}, "diskannpy.QueryResponse": {"tf": 1}, "diskannpy.QueryResponseBatch": {"tf": 1}, "diskannpy.QueryResponseBatch.identifiers": {"tf": 1}, "diskannpy.QueryResponseBatch.distances": {"tf": 1}, "diskannpy.defaults.FILTER_COMPLEXITY": {"tf": 1.4142135623730951}, "diskannpy.defaults.GRAPH_DEGREE": {"tf": 1}, "diskannpy.defaults.COMPLEXITY": {"tf": 1}}, "df": 15, "n": {"docs": {}, "df": 0, "n": {"docs": {"diskannpy.build_memory_index": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"diskannpy.defaults": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();